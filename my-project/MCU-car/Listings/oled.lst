C51 COMPILER V9.60.0.0   OLED                                                              09/15/2020 14:19:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled
                    -.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "head.h"
   2          
   3          void oled_show_sign()
   4          {
   5   1          oled_clear();
   6   1      
   7   1          oled_cover_square(32, 0, 4, bigBenz);
   8   1      }
   9          
  10          void oled_show_index()
  11          {
  12   1          oled_clear();
  13   1      
  14   1          // oled_cover_square(STATUS1, 1, xunxian);
  15   1          // oled_cover_square(STATUS2, 1, bizhang);
  16   1          // oled_cover_square(STATUS3, 1, atoD);
  17   1          // oled_cover_square(STATUS4, 1, atoG);
  18   1          oled_cover_square(STATUS5, 1, bluetooth);
  19   1          oled_cover_square(STATUS6, 1, power);
  20   1      
  21   1          oled_cover_square(48, 2, 2, benz);
  22   1      
  23   1          oled_cover_square(32 - 8, 6, 1, zen);
  24   1          oled_cover_square(48 - 8, 6, 1, me);
  25   1          oled_cover_square(64 - 8, 6, 1, zuo);
  26   1          oled_cover_square(80 - 8, 6, 1, dou);
  27   1          oled_cover_square(96 - 8, 6, 1, dui);
  28   1      }
  29          
  30          //起始信号
  31          void I2C_start()
  32          {
  33   1          SDA = 1;
  34   1          SCL = 1;
  35   1          SDA = 0;
  36   1          SCL = 0;
  37   1      }
  38          
  39          //终止信号
  40          void I2C_stop()
  41          {
  42   1          SDA = 0;
  43   1          SCL = 1;
  44   1          SDA = 1;
  45   1      }
  46          
  47          // iic发送单字节
  48          void I2C_send_byte(uchar dat)
  49          {
  50   1          uchar a = 0, b = 0;
  51   1          for (a = 0; a < 8; a++) //要发送8位，从最高位开始
  52   1          {
  53   2              dat <<= 1;
  54   2              SDA = CY; //起始信号之后SCL=0，所以可以直接改变SDA信号
C51 COMPILER V9.60.0.0   OLED                                                              09/15/2020 14:19:52 PAGE 2   

  55   2              SCL = 1;
  56   2              SCL = 0;
  57   2          }
  58   1          SDA = 1;
  59   1          SCL = 1;
  60   1          SCL = 0;
  61   1      }
  62          
  63          //写使能函数
  64          void oled_send_cmd(uchar cmd)
  65          {
  66   1          I2C_start();
  67   1          I2C_send_byte(0x78); //发送写器件地址
  68   1          I2C_send_byte(0x00); //发送要写入内存地址
  69   1          I2C_send_byte(cmd);  //写入命令
  70   1          I2C_stop();
  71   1      }
  72          
  73          //写字节函数
  74          void oled_send_data(uchar dat)
  75          {
  76   1          I2C_start();
  77   1          I2C_send_byte(0x78); //发送写器件地址
  78   1          I2C_send_byte(0x40); //发送要写入内存地址
  79   1          I2C_send_byte(dat);  //写入数据
  80   1          I2C_stop();
  81   1      }
  82          
  83          //清屏函数
  84          void oled_clear()
  85          {
  86   1          uchar i, j;
  87   1          for (i = 0; i < 8; i++)
  88   1          {
  89   2              //设置坐标
  90   2              oled_send_cmd(0xb0 + i);
  91   2              oled_send_cmd(0x10);
  92   2              oled_send_cmd(0x00);
  93   2              for (j = 0; j < 128; j++)
  94   2              {
  95   3                  oled_send_data(0x00);
  96   3              }
  97   2          }
  98   1      }
  99          
 100          //设置起始位置
 101          void oled_setpos(uchar x, uchar y)
 102          {
 103   1          //设置起始页
 104   1          oled_send_cmd(0xb0 + y);
 105   1          //设置起始列
 106   1          oled_send_cmd(x & 0x0f);                 //低位（x & 0x0f：起到取低四位的作用）
 107   1          oled_send_cmd(((x & 0xf0) >> 4) | 0x10); //高位（x & 0xf0：同理取高四位）
 108   1      }
 109          
 110          void oled_cover_square(uchar x0, uchar yPage0, uchar size, uchar BMP[])
 111          { //传入开始坐标x，坐标y的页，将覆盖的大小（size*16个像素点），将覆盖的数据
             -，要求将覆盖的区域为正方形
 112   1          uint i = 0;
 113   1          uchar x, x1, yPage, yPage1;
 114   1          x1 = x0 + size * 16;
 115   1          yPage1 = yPage0 - 1 + size * 2;
C51 COMPILER V9.60.0.0   OLED                                                              09/15/2020 14:19:52 PAGE 3   

 116   1          for (yPage = yPage0; yPage <= yPage1; yPage++)
 117   1          {
 118   2              oled_setpos(x0, yPage);
 119   2              for (x = x0; x < x1; x++)
 120   2              {
 121   3                  oled_send_data(BMP[i++]);
 122   3              }
 123   2          }
 124   1      }
 125          
 126          // 初始化oled
 127          void oledInit()
 128          {
 129   1          //关闭显示
 130   1          oled_send_cmd(0xae); //--turn off oled panel
 131   1          //关闭滚动
 132   1          oled_send_cmd(0x2E); 
 133   1          //设置起始列
 134   1          oled_send_cmd(0x00); //---set low column address设置起始列的低四位 0x0x
 135   1          oled_send_cmd(0x10); //---set high column address设置起始列的高四位0x1x
 136   1          //设置起始行
 137   1          oled_send_cmd(0x40); //--set start line address Set Mapping RAM Display Start Line (0x00~0x3F)
 138   1          //设置对比度
 139   1          oled_send_cmd(0x81); //--set contrast control register
 140   1          oled_send_cmd(0xff); // Set SEG Output Current Brightness对比度为oxff
 141   1          //左右反置 0xa1正常
 142   1          oled_send_cmd(0xa1); //--Set SEG/Column Mapping 0xa0
 143   1          //上下反置 0xc8正常
 144   1          oled_send_cmd(0xc8); //Set COM/Row Scan Direction 0xc0
 145   1          //设置复用率
 146   1          oled_send_cmd(0xa8); //--set multiplex ratio(1 to 64)
 147   1          oled_send_cmd(0x3f); //--1/64 duty
 148   1          //设置显示偏移
 149   1          oled_send_cmd(0xd3); //-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 150   1          oled_send_cmd(0x00); //-not offset
 151   1          //设置显示时钟分频率、振荡器频率
 152   1          oled_send_cmd(0xd5); //--set display clock divide ratio/oscillator frequency
 153   1          oled_send_cmd(0x80); //--set divide ratio, Set Clock as 100 Frames/Sec
 154   1          //设置重充电周期
 155   1          oled_send_cmd(0xd9); //--set pre-charge period
 156   1          oled_send_cmd(0xf1); //Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 157   1          //设置COM引脚硬件配置
 158   1          oled_send_cmd(0xda); //--set com pins hardware configuration
 159   1          oled_send_cmd(0x12);
 160   1          //设置 Vcomh 取消选择水平
 161   1          oled_send_cmd(0xdb); //--set vcomh
 162   1          oled_send_cmd(0x20); //Set VCOM Deselect Level
 163   1          //设置内存地址模式
 164   1          oled_send_cmd(0x20); //-Set Page Addressing Mode (0x00/0x01/0x02)设置地址模式
 165   1          oled_send_cmd(0x02); // 地址模式为页寻址
 166   1          //电荷泵设置
 167   1          oled_send_cmd(0x8d); //-- set Charge Pump enable / disable (0x14 / 0x10)
 168   1          oled_send_cmd(0x14); //--set(0x10) disable
 169   1          //整体显示开启状态(0xa4输出依据GDDRAM中的内容/0xa5不管显示数据RAM中的内容)
 170   1          oled_send_cmd(0xa4); // Disable Entire Display On
 171   1          //设置正常/反相显示 (0xa6/a7)
 172   1          oled_send_cmd(0xa6); // Disable Inverse Display On
 173   1          //开启显示
 174   1          oled_send_cmd(0xaf); //--turn on oled panel
 175   1      
 176   1          oled_clear(); //清屏
 177   1      }
C51 COMPILER V9.60.0.0   OLED                                                              09/15/2020 14:19:52 PAGE 4   

 178          
 179          void showAD()
 180          {
 181   1          char i;
 182   1      
 183   1          oled_send_cmd(0x2E); //关闭滚动
 184   1      
 185   1          //清除底下一列
 186   1          for ( i = 0; i < 128/16; i++)
 187   1          {
 188   2          oled_cover_square(16*i, 6, 1, emp);
 189   2          }
 190   1      
 191   1          oled_cover_square(32 - 8, 6, 1, guang);
 192   1          oled_cover_square(48 - 8, 6, 1, gao);
 193   1          oled_cover_square(64 - 8, 6, 1, wei);
 194   1          oled_cover_square(80 - 8, 6, 1, zhao);
 195   1          oled_cover_square(96 - 8, 6, 1, zu);
 196   1      
 197   1          oled_send_cmd(0x2A); //滚动命令
 198   1          oled_send_cmd(0x00); //A空字节
 199   1          oled_send_cmd(0x06); //B起始页 6
 200   1          oled_send_cmd(0x07); //C帧率范围内设置每次滚屏的时间间隔
 201   1          oled_send_cmd(0x07); //D终止页 7
 202   1          oled_send_cmd(0x00); //E每次垂直滚动位移
 203   1      
 204   1          oled_send_cmd(0x2F); //开启滚动
 205   1      }
 206          
 207          void turn_off_AD()
 208          {
 209   1          char i;
 210   1          
 211   1          oled_send_cmd(0x2E); //关闭滚动
 212   1          //清除底下一列
 213   1          for ( i = 0; i < 128/16; i++)
 214   1          {
 215   2          oled_cover_square(16*i, 6, 1, emp);
 216   2          }
 217   1      
 218   1          oled_cover_square(32 - 8, 6, 1, zen);
 219   1          oled_cover_square(48 - 8, 6, 1, me);
 220   1          oled_cover_square(64 - 8, 6, 1, zuo);
 221   1          oled_cover_square(80 - 8, 6, 1, dou);
 222   1          oled_cover_square(96 - 8, 6, 1, dui);
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    863    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
